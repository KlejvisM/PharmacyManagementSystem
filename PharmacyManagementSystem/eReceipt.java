/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package PharmacyManagementSystem;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author User
 */
public class eReceipt extends javax.swing.JFrame {
    Connection con=null;
    /**
     * Creates new form eReceipt
     */
    public eReceipt() {
        initComponents();
        con= DBConnection.connect();
        eReceiptTable();
        PharmacyStorageTable();
    }
private void eReceiptTable(){
       try{
           String sql = "SELECT * FROM `ereceipt`";
           PreparedStatement pst= con.prepareStatement(sql);
           ResultSet rs=pst.executeQuery();
           jTable1.setModel(DbUtils.resultSetToTableModel(rs));
       }//end of TRY
       catch(Exception e){
           JOptionPane.showMessageDialog(null,""+ e);
       }//end of CATCH
   }//end of method that will show database in jtable
private void PharmacyStorageTable(){
       try{
           String sql = "SELECT * FROM `pharmacystorage`";
           PreparedStatement pst= con.prepareStatement(sql);
           ResultSet rs=pst.executeQuery();
           jTable2.setModel(DbUtils.resultSetToTableModel(rs));
       }//end of TRY
       catch(Exception e){
           JOptionPane.showMessageDialog(null,""+ e);
       }//end of CATCH
   }//end of method that will show database in jtable
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        CustomerPNtxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        CustomerIDTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        CustomerNameTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        MedIdTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        MedNameTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        SearchTxt = new javax.swing.JTextField();
        SearchByCj = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        SearchBtn = new javax.swing.JButton();
        InsertBtn = new javax.swing.JButton();
        ClearBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerMedicationTxt = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("JPharma e-Receipt");
        setBackground(new java.awt.Color(51, 94, 144));
        setMinimumSize(new java.awt.Dimension(1000, 550));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(1, 114, 96));
        jPanel1.setToolTipText("");
        jPanel1.setMaximumSize(new java.awt.Dimension(1000, 550));
        jPanel1.setMinimumSize(new java.awt.Dimension(1000, 550));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 550));

        CustomerPNtxt.setBackground(new java.awt.Color(255, 255, 255));
        CustomerPNtxt.setFont(new java.awt.Font("MS UI Gothic", 1, 16)); // NOI18N
        CustomerPNtxt.setForeground(new java.awt.Color(0, 0, 0));
        CustomerPNtxt.setMaximumSize(new java.awt.Dimension(140, 30));
        CustomerPNtxt.setMinimumSize(new java.awt.Dimension(140, 30));
        CustomerPNtxt.setPreferredSize(new java.awt.Dimension(140, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Customer Medication");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Customer ID");

        CustomerIDTxt.setEditable(false);
        CustomerIDTxt.setBackground(new java.awt.Color(255, 255, 255));
        CustomerIDTxt.setFont(new java.awt.Font("MS UI Gothic", 1, 16)); // NOI18N
        CustomerIDTxt.setForeground(new java.awt.Color(0, 0, 0));
        CustomerIDTxt.setMaximumSize(new java.awt.Dimension(140, 30));
        CustomerIDTxt.setMinimumSize(new java.awt.Dimension(140, 30));
        CustomerIDTxt.setPreferredSize(new java.awt.Dimension(140, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer  Name");

        CustomerNameTxt.setBackground(new java.awt.Color(255, 255, 255));
        CustomerNameTxt.setFont(new java.awt.Font("MS UI Gothic", 1, 16)); // NOI18N
        CustomerNameTxt.setForeground(new java.awt.Color(0, 0, 0));
        CustomerNameTxt.setMaximumSize(new java.awt.Dimension(140, 30));
        CustomerNameTxt.setMinimumSize(new java.awt.Dimension(140, 30));
        CustomerNameTxt.setPreferredSize(new java.awt.Dimension(140, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Customer PN");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Med. ID");

        MedIdTxt.setEditable(false);
        MedIdTxt.setBackground(new java.awt.Color(255, 255, 255));
        MedIdTxt.setFont(new java.awt.Font("MS UI Gothic", 1, 16)); // NOI18N
        MedIdTxt.setForeground(new java.awt.Color(0, 0, 0));
        MedIdTxt.setMaximumSize(new java.awt.Dimension(140, 30));
        MedIdTxt.setMinimumSize(new java.awt.Dimension(140, 30));
        MedIdTxt.setPreferredSize(new java.awt.Dimension(140, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Med. Name");

        MedNameTxt.setEditable(false);
        MedNameTxt.setBackground(new java.awt.Color(255, 255, 255));
        MedNameTxt.setFont(new java.awt.Font("MS UI Gothic", 1, 16)); // NOI18N
        MedNameTxt.setForeground(new java.awt.Color(0, 0, 0));
        MedNameTxt.setMaximumSize(new java.awt.Dimension(140, 30));
        MedNameTxt.setMinimumSize(new java.awt.Dimension(140, 30));
        MedNameTxt.setPreferredSize(new java.awt.Dimension(140, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Search");

        SearchTxt.setBackground(new java.awt.Color(255, 255, 255));
        SearchTxt.setFont(new java.awt.Font("MS UI Gothic", 1, 16)); // NOI18N
        SearchTxt.setForeground(new java.awt.Color(0, 0, 0));
        SearchTxt.setMaximumSize(new java.awt.Dimension(140, 30));
        SearchTxt.setMinimumSize(new java.awt.Dimension(140, 30));
        SearchTxt.setPreferredSize(new java.awt.Dimension(140, 30));

        SearchByCj.setBackground(new java.awt.Color(255, 255, 255));
        SearchByCj.setForeground(new java.awt.Color(0, 0, 0));
        SearchByCj.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medicine Name", "Contains letters", "Customer PN" }));
        SearchByCj.setMaximumSize(new java.awt.Dimension(140, 30));
        SearchByCj.setMinimumSize(new java.awt.Dimension(140, 30));
        SearchByCj.setPreferredSize(new java.awt.Dimension(140, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Search by");

        SearchBtn.setBackground(new java.awt.Color(1, 114, 96));
        SearchBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SearchBtn.setForeground(new java.awt.Color(255, 255, 255));
        SearchBtn.setText("Search");
        SearchBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SearchBtn.setMaximumSize(new java.awt.Dimension(90, 32));
        SearchBtn.setPreferredSize(new java.awt.Dimension(90, 32));
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        InsertBtn.setBackground(new java.awt.Color(1, 114, 96));
        InsertBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        InsertBtn.setForeground(new java.awt.Color(255, 255, 255));
        InsertBtn.setText("Insert");
        InsertBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        InsertBtn.setMaximumSize(new java.awt.Dimension(90, 32));
        InsertBtn.setPreferredSize(new java.awt.Dimension(90, 32));
        InsertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertBtnActionPerformed(evt);
            }
        });

        ClearBtn.setBackground(new java.awt.Color(1, 114, 96));
        ClearBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ClearBtn.setForeground(new java.awt.Color(255, 255, 255));
        ClearBtn.setText("Clear");
        ClearBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ClearBtn.setMaximumSize(new java.awt.Dimension(90, 32));
        ClearBtn.setPreferredSize(new java.awt.Dimension(90, 32));
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });

        UpdateBtn.setBackground(new java.awt.Color(1, 114, 96));
        UpdateBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        UpdateBtn.setForeground(new java.awt.Color(255, 255, 255));
        UpdateBtn.setText("Update");
        UpdateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UpdateBtn.setMaximumSize(new java.awt.Dimension(90, 32));
        UpdateBtn.setPreferredSize(new java.awt.Dimension(90, 32));
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setBackground(new java.awt.Color(1, 114, 96));
        DeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DeleteBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteBtn.setText("Delete");
        DeleteBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DeleteBtn.setMaximumSize(new java.awt.Dimension(90, 32));
        DeleteBtn.setPreferredSize(new java.awt.Dimension(90, 32));
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(1, 114, 96));
        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer ID", "Customer Name", "Customer PN", "Customer Medication"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setMaximumSize(new java.awt.Dimension(510, 350));
        jTable1.setMinimumSize(new java.awt.Dimension(510, 350));
        jTable1.setPreferredSize(new java.awt.Dimension(510, 350));
        jTable1.setRowHeight(30);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.setShowGrid(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jTable2.setBackground(new java.awt.Color(1, 114, 96));
        jTable2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable2.setForeground(new java.awt.Color(255, 255, 255));
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Medicine ID", "Name", "Quantity", "Price", "Expiry Date", "Sold"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setEditingRow(0);
        jTable2.setGridColor(new java.awt.Color(0, 0, 0));
        jTable2.setMaximumSize(new java.awt.Dimension(510, 350));
        jTable2.setMinimumSize(new java.awt.Dimension(510, 350));
        jTable2.setPreferredSize(new java.awt.Dimension(510, 350));
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.setShowGrid(true);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 1)); // NOI18N

        CustomerMedicationTxt.setBackground(new java.awt.Color(255, 255, 255));
        CustomerMedicationTxt.setColumns(20);
        CustomerMedicationTxt.setForeground(new java.awt.Color(0, 0, 0));
        CustomerMedicationTxt.setRows(5);
        jScrollPane1.setViewportView(CustomerMedicationTxt);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(98, 98, 98)
                                .addComponent(MedIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(87, 87, 87)
                                .addComponent(SearchByCj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(InsertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(UpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(110, 110, 110)
                                .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(74, 74, 74)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(MedNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(66, 66, 66)
                                .addComponent(CustomerIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(38, 38, 38)
                                .addComponent(CustomerNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(60, 60, 60)
                                .addComponent(CustomerPNtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel1))
                            .addComponent(CustomerIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel2))
                            .addComponent(CustomerNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel3))
                            .addComponent(CustomerPNtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addComponent(jLabel4)
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(MedIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(MedNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel7))
                                    .addComponent(SearchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(SearchByCj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(InsertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(UpdateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //searches through the database by user input and by a category
    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        if(SearchTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Nothing in the search field");
        }else{
            try{
                if(SearchByCj.getSelectedItem().equals("Medicine Name")){
                    String sql="SELECT * FROM `pharmacystorage` WHERE `MedicineName`=?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, SearchTxt.getText());
                    ResultSet rs=pst.executeQuery();
                    jTable2.setModel(DbUtils.resultSetToTableModel(rs));
                }
                else if(SearchByCj.getSelectedItem().equals("Contains letters")){
                    String sql="SELECT * FROM `pharmacystorage` WHERE `MedicineName` LIKE '%"+SearchTxt.getText()+"%'";
                    PreparedStatement pst = con.prepareStatement(sql);
                    ResultSet rs=pst.executeQuery();
                    jTable2.setModel(DbUtils.resultSetToTableModel(rs));
                }
                else if(SearchByCj.getSelectedItem().equals("Customer PN")){
                String sql="SELECT * FROM `ereceipt` WHERE `Customer PN`=?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, SearchTxt.getText());
                    ResultSet rs=pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_SearchBtnActionPerformed
    //inserts the information in the database
    private void InsertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertBtnActionPerformed
if(MedNameTxt.getText().isEmpty()||CustomerPNtxt.getText().isEmpty()||CustomerNameTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null ,"Missing data");
        }else{
            try{
                String Medication=MedIdTxt.getText()+" "+MedNameTxt.getText();
                String sql = "INSERT INTO `ereceipt`(`Customer Name`, `Customer PN`, `CustomerMedication`) VALUES(?,?,?)";
                PreparedStatement pst= con.prepareStatement(sql);
                pst.setString(1, CustomerNameTxt.getText().toUpperCase());
                pst.setString(2, CustomerPNtxt.getText().toUpperCase());
                pst.setString(3, Medication);
                pst.execute();
                ClearBtnActionPerformed(evt);
                JOptionPane.showMessageDialog(null, "Customer inserted succesfully");
                eReceiptTable();
            }   catch (Exception e) {
                JOptionPane.showMessageDialog(null, "ERROR:"+e);
            }
    }//GEN-LAST:event_InsertBtnActionPerformed
    }
    //clear the fileds when clicked
    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        MedIdTxt.setText("");
        MedNameTxt.setText("");
        CustomerIDTxt.setText("");
        CustomerNameTxt.setText("");
        CustomerPNtxt.setText("");
        CustomerMedicationTxt.setText("");
        SearchTxt.setText("");
        eReceiptTable();
    }//GEN-LAST:event_ClearBtnActionPerformed
//updates the information in the database
    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
if(CustomerPNtxt.getText().isEmpty()||CustomerMedicationTxt.getText().isEmpty()|| CustomerNameTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null ,"Missing data");
        }else{
            try{
                String PreviousValue = jLabel9.getText();// holds the previous med. value
                String Medication=MedIdTxt.getText()+" "+MedNameTxt.getText();// makes both fileds as one string to be inserted in the database
                String NewValue =PreviousValue + Medication;// makes both the previous value and current value in one string so the current value doesn't get deleted from the database
                String sql = "UPDATE `ereceipt` SET `Customer Name` = ?,`Customer PN` = ?,`CustomerMedication` =? WHERE `CustomerID` =?";
                PreparedStatement pst= con.prepareStatement(sql);
                pst.setString(1, CustomerNameTxt.getText().toUpperCase());
                pst.setString(2, CustomerPNtxt.getText().toUpperCase());
                pst.setString(3, NewValue+"  ");
                pst.setString(4, CustomerIDTxt.getText());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Customer updated succesfully");
                eReceiptTable();
                ClearBtnActionPerformed(evt);
            }     catch (Exception e) {
                System.out.println(e);
                JOptionPane.showMessageDialog(null, "ERROR:"+e);
            }
        }
    }//GEN-LAST:event_UpdateBtnActionPerformed
// delete the information from the datbase
    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        if(CustomerIDTxt.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Nothing is selected");
        }else{
            try{
                String sql= "DELETE FROM `ereceipt` WHERE `CustomerID`=?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, CustomerIDTxt.getText());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Customer deleted succesfully");
                eReceiptTable();
                ClearBtnActionPerformed(evt);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed
// display table info. in the textfields
    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
    DefaultTableModel model = (DefaultTableModel)jTable2.getModel();
    int select= jTable2.getSelectedRow();
    MedIdTxt.setText(model.getValueAt(select, 0).toString());
    MedNameTxt.setText(model.getValueAt(select, 1).toString());
    }//GEN-LAST:event_jTable2MouseClicked
// display table info. in the textfields
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
    int select= jTable1.getSelectedRow();
    CustomerIDTxt.setText(model.getValueAt(select, 0).toString());
    CustomerNameTxt.setText(model.getValueAt(select, 1).toString());
    CustomerPNtxt.setText(model.getValueAt(select, 2).toString());
    CustomerMedicationTxt.setText(model.getValueAt(select, 3).toString());
    jLabel9.setText(model.getValueAt(select, 3).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(eReceipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(eReceipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(eReceipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(eReceipt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new eReceipt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearBtn;
    private javax.swing.JTextField CustomerIDTxt;
    private javax.swing.JTextArea CustomerMedicationTxt;
    private javax.swing.JTextField CustomerNameTxt;
    private javax.swing.JTextField CustomerPNtxt;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton InsertBtn;
    private javax.swing.JTextField MedIdTxt;
    private javax.swing.JTextField MedNameTxt;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JComboBox<String> SearchByCj;
    private javax.swing.JTextField SearchTxt;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
